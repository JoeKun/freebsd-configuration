# /etc/pf.conf: Configuration for Packet Filter

#-----------------------------------------------------------
# Variables
#-----------------------------------------------------------

ext_if = "ix0"
tcp_services = "{ ssh, domain, http, https, ldap, ldaps, smtp, smtps, submission, imaps, mdns, afpovertcp, 32400 }"
udp_services = "{ domain, mdns }"
icmp_types = "{ echoreq, unreach }"

vm_if = "vm-public"
vm_subnet = "{172.16.0.1/24}"

lan_subnet = "{10.0.0.0/24}"

cloud_servers = "{123.231.123.231, 231.123.231.123}"


#-----------------------------------------------------------
# Tables
#-----------------------------------------------------------

# Define persistent table of abusive hosts.
table <abusive_hosts> persist

# Define persistent table for hosts banned by sshguard.
table <sshguard> persist

# NAT for bhyve virtual machines.
nat on $ext_if inet from $vm_subnet to any -> ($ext_if)


#-----------------------------------------------------------
# Options
#-----------------------------------------------------------

# Ignore loopback interface.
set skip on lo0

# Protect against activity from spoofed or forged IP addresses.
antispoof quick for $ext_if


#-----------------------------------------------------------
# Rules
#-----------------------------------------------------------

# Allow all outgoing traffic.
pass out quick

# Allow all outgoing traffic from bhyve virtual machines.
pass in quick on $vm_if all

# Allow all incoming traffic from local area network for allowed TCP services.
pass in quick on $ext_if proto tcp from $lan_subnet to any port $tcp_services

# Allow all incoming traffic from personal cloud servers for allowed TCP
# services.
pass in quick on $ext_if proto tcp from $cloud_servers to any port $tcp_services

# Block all incoming traffic from abusive hosts table.
block in quick from <abusive_hosts>

# Block all incoming traffic from sshguard table.
block in quick from <sshguard>

# Block all incoming traffic…
block in

# …except for allowed TCP services with rate limiting against abusive hosts…
pass in quick on $ext_if proto tcp to any port $tcp_services    \
    flags S/SA keep state                                       \
    (max-src-conn 100, max-src-conn-rate 15/5,                  \
    overload <abusive_hosts> flush)

# …and UDP services, as well as ICMP.
pass in quick on $ext_if proto udp to any port $udp_services
pass in quick on $ext_if inet proto icmp all icmp-type $icmp_types

