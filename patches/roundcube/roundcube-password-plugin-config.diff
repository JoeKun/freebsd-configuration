--- a/config.inc.php	2017-11-08 10:42:04.000000000 -0800
+++ b/config.inc.php	2018-01-19 23:53:24.119676000 -0800
@@ -4,7 +4,7 @@
 // -----------------------
 // A driver to use for password change. Default: "sql".
 // See README file for list of supported driver names.
-$config['password_driver'] = 'sql';
+$config['password_driver'] = 'ldap_simple';
 
 // Determine whether current password is required to change password.
 // Default: false.
@@ -12,11 +12,11 @@
 
 // Require the new password to be a certain length.
 // set to blank to allow passwords of any length
-$config['password_minimum_length'] = 0;
+$config['password_minimum_length'] = 8;
 
 // Require the new password to contain a letter and punctuation character
 // Change to false to remove this check.
-$config['password_require_nonalpha'] = false;
+$config['password_require_nonalpha'] = true;
 
 // Enables logging of password changes into logs/password
 $config['password_log'] = false;
@@ -42,7 +42,7 @@
 // Possible options: des-crypt, ext-des-crypt, md5-crypt, blowfish-crypt,
 // sha256-crypt, sha512-crypt, md5, sha, smd5, ssha, samba, ad, dovecot, clear.
 // For details see password::hash_password() method.
-$config['password_algorithm'] = 'clear';
+$config['password_algorithm'] = 'blowfish-crypt';
 
 // Password prefix (e.g. {CRYPT}, {SHA}) for passwords generated
 // using password_algorithm above. Default: empty.
@@ -50,8 +50,8 @@
 
 // Path for dovecotpw/doveadm-pw (if not in the $PATH).
 // Used for password_algorithm = 'dovecot'.
-// $config['password_dovecotpw'] = '/usr/local/sbin/doveadm pw'; // for dovecot-2.x
-$config['password_dovecotpw'] = '/usr/local/sbin/dovecotpw'; // for dovecot-1.x
+$config['password_dovecotpw'] = '/usr/local/sbin/doveadm pw'; // for dovecot-2.x
+//$config['password_dovecotpw'] = '/usr/local/sbin/dovecotpw'; // for dovecot-1.x
 
 // Dovecot password scheme.
 // Used for password_algorithm = 'dovecot'.
@@ -113,7 +113,7 @@
 // By default the crypt() function which is used to create the %c
 // parameter uses the md5 algorithm (deprecated, use %P).
 // You can choose between: des, md5, blowfish, sha256, sha512.
-$config['password_crypt_hash'] = 'md5';
+$config['password_crypt_hash'] = 'blowfish';
 
 // By default domains in variables are using unicode.
 // Enable this option to use punycoded names
@@ -167,7 +167,7 @@
 // TLS is started after connecting
 // Using TLS for password modification is recommended.
 // Default: false
-$config['password_ldap_starttls'] = false;
+$config['password_ldap_starttls'] = true;
 
 // LDAP version
 // Default: '3'
@@ -175,7 +175,7 @@
 
 // LDAP base name (root directory)
 // Exemple: 'dc=exemple,dc=com'
-$config['password_ldap_basedn'] = 'dc=exemple,dc=com';
+$config['password_ldap_basedn'] = 'ou=directory';
 
 // LDAP connection method
 // There are two connection methods for changing a user's LDAP password.
@@ -202,7 +202,7 @@
 // '%domain' will be replaced by the current roundcube user's domain part
 // '%dc' will be replaced by domain name hierarchal string e.g. "dc=test,dc=domain,dc=com"
 // Exemple: 'uid=%login,ou=people,dc=exemple,dc=com'
-$config['password_ldap_userDN_mask'] = 'uid=%login,ou=people,dc=exemple,dc=com';
+$config['password_ldap_userDN_mask'] = 'uid=%name,ou=users,dc=%domain,ou=directory';
 
 // LDAP search DN
 // The DN roundcube should bind with to find out user's DN
@@ -213,7 +213,7 @@
 // users login to find his DN instead. A common reason might be that
 // your users are placed under different ou's like engineering or
 // sales which cannot be derived from their login only.
-$config['password_ldap_searchDN'] = 'cn=roundcube,ou=services,dc=example,dc=com';
+//$config['password_ldap_searchDN'] = 'cn=roundcube,ou=services,dc=example,dc=com';
 
 // LDAP search password
 // If password_ldap_searchDN is set, the password to use for
@@ -223,13 +223,13 @@
 // is only accesible to roundcube and don't forget to restrict roundcube's access to
 // your directory as much as possible using ACLs. Should this password be compromised
 // you want to minimize the damage.
-$config['password_ldap_searchPW'] = 'secret';
+//$config['password_ldap_searchPW'] = 'secret';
 
 // LDAP search base
 // If password_ldap_searchDN is set, the base to search in using the filter below.
 // Note that you should comment out the default password_ldap_userDN_mask setting
 // for this to take effect.
-$config['password_ldap_search_base'] = 'ou=people,dc=example,dc=com';
+//$config['password_ldap_search_base'] = 'ou=people,dc=example,dc=com';
 
 // LDAP search filter
 // If password_ldap_searchDN is set, the filter to use when
@@ -241,7 +241,7 @@
 // '%dc' will be replaced by domain name hierarchal string e.g. "dc=test,dc=domain,dc=com"
 // Example: '(uid=%login)'
 // Example: '(&(objectClass=posixAccount)(uid=%login))'
-$config['password_ldap_search_filter'] = '(uid=%login)';
+//$config['password_ldap_search_filter'] = '(uid=%login)';
 
 // LDAP password hash type
 // Standard LDAP encryption type which must be one of: crypt,
